name: Haskell CI

on: [push]

jobs:
  linux:
    runs-on: ubuntu-latest
    container:
      image: lierdakil/pandoc-crossref-build:60c6e7bd6cb98968047fe297119f35f0477ba45d
    strategy:
      matrix:
        pandocver: ["2.8.0.1"]
    steps:
    - uses: actions/checkout@v1
    - name: Copy build config from image
      run: |
        cp -r /root/.cabal "$HOME"
        cp /root/cabal.project.local ./
    - name: Build
      run: cabal v2-build --constraint pandoc==${{matrix.pandocver}}
    - name: Run tests
      run: cabal v2-test --constraint pandoc==${{matrix.pandocver}}
    - name: Find artifact
      shell: bash
      run:  find dist-newstyle -type f -perm +100 -name pandoc-crossref -exec cp {} ./ \;
    - name: Package artifact
      shell: bash
      run:  xz pandoc-crossref
    - uses: actions/upload-artifact@v1
      with:
        name: pandoc-crossref-${{ runner.os }}-${{matrix.pandocver}}.xz
        path: ./pandoc-crossref.xz

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        pandocver: ["2.8.0.1"]
    steps:
    - uses: actions/checkout@v1
    - name: Setup GHC
      run: |
        brew bundle --file=osx/Brewfile
    - uses: actions/cache@v1
      id: cache
      with:
        path: .cabal-store
        key: ${{ runner.os }}-${{matrix.pandocver}}-${{ hashFiles('pandoc-crossref.cabal') }}
    - name: Cabal update
      run: |
        export PATH="/usr/local/opt/ghc@8.6/bin:$PATH"
        cabal --store-dir=".cabal-store" v2-update
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        export PATH="/usr/local/opt/ghc@8.6/bin:$PATH"
        cabal --store-dir=".cabal-store" v2-build --only-dependencies --enable-tests
    - name: Build
      run: |
        export PATH="/usr/local/opt/ghc@8.6/bin:$PATH"
        cabal --store-dir=".cabal-store" v2-build
    - name: Run tests
      run: |
        export PATH="/usr/local/opt/ghc@8.6/bin:$PATH"
        cabal --store-dir=".cabal-store" v2-test
    - name: Find artifact
      shell: bash
      run:  find dist-newstyle -type f -perm +100 -name pandoc-crossref -exec cp {} ./ \;
    - name: Package artifact
      shell: bash
      run:  xz pandoc-crossref
    - uses: actions/upload-artifact@v1
      with:
        name: pandoc-crossref-${{ runner.os }}-${{matrix.pandocver}}.xz
        path: ./pandoc-crossref.xz

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        pandocver: ["2.8.0.1"]
        cabalver: ["3.0"]
        ghcver: ["8.6.5"]
    env:
      GHC: "C:\\ProgramData\\chocolatey\\lib\\ghc\\tools\\ghc-${{matrix.ghcver}}\\bin\\ghc.exe"
    steps:
    - uses: actions/checkout@v1
    - name: Setup GHC
      run: |
        choco install ghc --version ${{matrix.ghcver}} --ignore-dependencies
        choco install cabal --version ${{matrix.cabalver}} --ignore-dependencies
    - uses: actions/cache@v1
      id: cache
      with:
        path: .cabal-store
        key: ${{ runner.os }}-${{matrix.pandocver}}-${{ hashFiles('pandoc-crossref.cabal') }}
    - name: Cabal update
      run: |
        cabal --store-dir=".cabal-store" v2-update
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cabal --store-dir=".cabal-store" v2-build -w "$Env:ghc" --only-dependencies --enable-tests
    - name: Build
      run: cabal --store-dir=".cabal-store" v2-build -w "$Env:ghc"
    - name: Run tests
      run: cabal --store-dir=".cabal-store" v2-test -w "$Env:ghc"
    - name: Find artifact
      shell: bash
      run:  find dist-newstyle -type f -name pandoc-crossref.exe -exec cp {} ./ \;
    - name: Package artifact
      run:  7z a "pandoc-crossref.zip" pandoc-crossref.exe
    - uses: actions/upload-artifact@v1
      with:
        name: pandoc-crossref-${{ runner.os }}-${{matrix.pandocver}}.zip
        path: ./pandoc-crossref.zip

  release:
    if: contains(github.ref, 'tags/v')
    needs: [linux, windows, macos]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pandocver: ["2.8.0.1"]
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: pandoc-crossref-Linux-${{matrix.pandocver}}.xz
    - uses: actions/download-artifact@v1
      with:
        name: pandoc-crossref-macOS-${{matrix.pandocver}}.xz
    - uses: actions/download-artifact@v1
      with:
        name: pandoc-crossref-Windows-${{matrix.pandocver}}.zip
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: true
    - name: Upload Release Asset Linux
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pandoc-crossref-Linux-${{matrix.pandocver}}.xz
        asset_name: pandoc-crossref-Linux-${{matrix.pandocver}}.xz
        asset_content_type: application/x-xz
    - name: Upload Release Asset macOS
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pandoc-crossref-macOS-${{matrix.pandocver}}.xz
        asset_name: pandoc-crossref-macOS-${{matrix.pandocver}}.xz
        asset_content_type: application/x-xz
    - name: Upload Release Asset Windows
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pandoc-crossref-Windows-${{matrix.pandocver}}.zip
        asset_name: pandoc-crossref-Windows-${{matrix.pandocver}}.zip
        asset_content_type: application/zip
